module half_add(input logic a, b,
            output logic sum, carry);
  
assign sum = a ^ b;
  assign carry = a & b;
  
  module vmul(input logic [1:0]a, [1:0]b,
                  output logic [3:0]p);
    
  logic s1,c1,s2,c2;
    logic pp0,pp1,pp2,pp3;
  
  assign pp0 = a[0] & b[0];
    assign pp1 = a[1] & b[0];
    assign pp2 = a[0] & b[1];
    assign pp3 = a[1] & a[0];
    
    half_add ha1(.a(pp1), .b(pp2), .sum(s1), .carry(c1));
    
    half_add h2(.a(pp3), .b(c1), .sum(s2), .carry(c2));
    
    assign p[0] = pp0;
    assign p[1] = s1;
    assign p[2] = s2;
    assign p[3] = c2;
  endmodule
